	@page "/store"
	@inject BuddyFitDbContext DbContext
	@using BuddyFitProject.Data
	@using BuddyFitProject.Data.Models
	@using Microsoft.EntityFrameworkCore


<PageTitle> Store </PageTitle>

@if (LoggedIn)
{

<h1 class="h">Store </h1>

<!-- Display Coin Balance -->
<div class="top-right-coins">
	<div class="coin">$</div>
	<div class="coin-label">@User.Coins</div>
</div>

<!-- Display Store Items-->
@foreach (var item in storeItems)
{
	<div class="store-item">
		<p>@item.Name - @item.Type</p>
		<p> Price: $@item.Price</p>
		<button @onclick="() => ConfirmUnlock(item)"> Unlock</button>
		<br>

	</div>
}


<h2> Your Inventory</h2>
@if (Inventory.Count > 0)
{
	@foreach (var fruit in InventoryFruits)
	{
		<FruitItem Fruit ="@fruit" />
	}
}

else
{
	<p> No items in inventory. </p>
}


<body style="background-color: #ffcc99;">

	<!-- Pet Preview section -->
	<div class= "Pet-preview" style= "margin-top: 20px;">
		<h2> Pet Preview</h2>
		@if (SelectedOutfit != null)
		{
			<img src = "@($"{SelectedOutfit?.Name}.png")" alt = "Pet wearing @SelectedOutfit?.Name"
			style = "width:100px; height: 100px;"/>
		}
		else
		{
			<p> Select an outfit to see the preview</p>
		}

	</div>

	<br />

	<!-- Inventory display section -->
	<div> Inventory: </div>

	<br/>

	<div style="display: flex; justify-content: space-between; align-items: flex-start; gap: 20px; object-fit: contain;">
		<!--Cat outfits section-->
		<div style = "flex: 1;"> 
			<h2>Cat outfits</h2>
			<div id = "outfitDiv" style= "height:300px; overflow-y: auto; border: 1px solid black;">
				<table style="width: 100%; border-collapse: collapse;">
					@foreach (var outfit in VisibleOutfits)
					{
						<tr style = "text-align: center;"> 
							<td>
								<div style = "padding: 10px;">
									<img src= "@outfit.CostumeImage" alt= "@outfit.Name"
									style="width:100px; height:100px; border: 1px solid gray;" />
									<p>@outfit.Name</p>
									@if (Inventory.Any(i => i.Name == outfit.Name))
									{
										<button @onclick = "() => SelectedOutfit= outfit"> Preview</button>
									}

									else 
									{
										<button @onclick = "() => ShowPurchaseConfirmation
										(outfit.Name, outfit.CostumeImage, outfit.Price)"> Unlock </button>
									}


								</div>
							</td>
						</tr>
					}
				</table>
			</div>
		</div>


		<!--Fruits section-->
		<div style= "flex: 1;">
			<h2>Fruits</h2>
			<div id = "FruitDiv" style= "height:300px; overflow-y: auto; border: 1px solid black;"> 
				<table style= "width: 100%; border-collapse:collapse;">
					@foreach (var fruit in InventoryFruits)
					{
						<tr style ="text-align: center;"> 
							<td>
								<div style= "padding: 10px;">
									<img src = "@fruit.ImageUrl" alt = "@fruit.Name" 
									style = "width: 100px; height: 100px; border: 1px solid gray;" />
									<p> @fruit.Name</p>
									<button @onclick = "() => AddToInventory(fruit)"> Add to Inventory </button>
								</div>
							</td>
						</tr>
					}
				</table>
			</div>
		</div>
	</div>

</body>

}
else
{
	<h1>You must be logged in to access this page.</h1>
	<a href="login">Go to Login</a>
}

@code{

	private Users? User { get; set; }
	private List<Items> storeItems = new ();
	private bool LoggedIn = false;


	private async Task ShowPurchaseConfirmation(Items item)
	{
		
	}

	private List<Items> Outfits = new();
	private List<Items> Fruits = new();

	private List<Items> UnlockedOutfits = new();
	private List<Items> OwnedFruits = new();

	private Items? SelectedOutfit;

	// Loads inventory data from the database
	private async Task LoadInventory()
	{
		
	}

	// Loads the user's coin balance from the database
	private async Task LoadUserCoins()
	{
		
	}

	// Handles the purchase of an outfit
	private async Task PurchaseItem(Items item)
	{
		
	}

	// Calls to load all store data when the page initializes
	protected override async Task OnInitializedAsync()
	{
		
	}

	private async Task ConfirmUnlock (Items item)
	{
		
	}

	private async Task UnlockItem(Items item)
	{
		
	}


}









		