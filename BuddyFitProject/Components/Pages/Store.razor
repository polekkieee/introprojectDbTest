@page "/store"
@inject IJSRuntime JSRuntime

<PageTitle> Store </PageTitle>
<head>
	<link href="Store.razor.css" rel="stylesheet" />

</head>
<h1 class="h">Store </h1>



<div class="coin">$</div>
<div class="coin-label">1000</div>

<div class="level-coin">lvl</div>
<div class="level-label">10</div>




<body>

	<br />

	<div> Inventory: </div>

	<br/>

	<ul>
		<li> Dragon outfit</li>
		<li> Fire outfit </li>
		<li> Water outfit</li>
		<li> Earth outfit</li>
	</ul>

	<ul>
		<li> Bananas</li>
		<li> Apples</li>
		<li> Pears</li>
		<li> Cucumbers </li>
	</ul>

	<div id="myDiv" style= "height:300px;overflow-y:auto;border:1px solid black;">	
		@foreach (var item in Allitems)
		{
			<div style= "height: 80px; background-color: pink; margin: 10px; padding: 20px; color: black; text-align: center;">
				@item
			</div>
		}
	</div>

</body>

@code{
	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			await JSRuntime.InvokeVoidAsync("checkDivScrollEnd", "myDiv", nameof (OnDivScrolledToEnd), DotNetObjectReference.Create(this));
		}
	}
	protected List<string> Allitems = new List<string>
	{
		"Bananas",
		"Apples",
		"Pears",
		"Cucumbers"
	};

	[JSInvokable]
	
	public async Task OnDivScrolledToEnd()
	{/*

		await JSRuntime.InvokeVoidAsync(() =>
		{
			Allitems.AddRange(new List<string>
							{
							"Dragon outfit",
							"Fire outfit",
							"Water outfit",
							"Earth outfit",
							"Item5",
							"Item6",
							"Item7",
							"Item8",
							"Item9",
							"Item10",

							}), StateHasChanged());
			}
		}*/
	}	
}
