

@page "/Workout"
@attribute [StreamRendering]
@using BuddyFitProject.Data.Models
@using System.Security.Claims
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<BuddyFitProject.Data.BuddyFitDbContext> DbFactory
@inject NavigationManager navigationManager
@inject IHttpContextAccessor HttpContextAccessor
@inject Services.UserService UserService
@inject Services.UserStatisticsService UserStatisticsService
@inject Services.ExerciseService ExerciseService
@inject Services.PetService PetService
@rendermode InteractiveServer

<header>
    <link href="Workout.razor.css" rel="stylesheet" />
    <PageTitle>Workout</PageTitle>

</header>

<body>
    <h2>Current total minutes: @CurrentMinutes </h2>
    <h1>Workout</h1>
    <p>Log your exercises by filling the minutes or by adding +1 minute by clicking the arrow in the textbox. </p>
    <p>Do not forget to fill in the speed or weights if needed</p>

    <div class="coin">$</div>
    <div class="coin-label">@coinsamount</div>

    <div class="level-coin">lvl</div>
    <div class="level-label">@level</div>

    <div class="wrapper">
        <!-- Left white frame with Coins amount label -->
        <div class="left-frame">
            <label>Current coins amount:</label>
            <label>@coinsamount</label>

            <button @onclick="UpdateCoinsAmount">Convert given data to coins</button>

            <label>So name, what exercises did you do today?</label>

            <label>Minutes till bonus:</label>
            <label> @Next100mins</label>

        </div>

        <!-- Exercise container -->
        <div class="exercise-container">
            <div class="onderdeel-item">
                <label>Minutes</label>
            </div>
            <div class="exercise-item">
                <label>Push-up:</label>
                <input type="number" @bind="@PushUpMinutes" />
            </div>
            <div class="exercise-item">
                <label>Plank:</label>
                <input type="number" @bind="@PlankMinutes" />
            </div>
            <div class="exercise-item">
                <label>Burpees:</label>
                <input type="number" @bind="@BurpeesMinutes" />
            </div>
            <div class="exercise-item">
                <label>Jumping Jacks:</label>
                <input type="number" @bind="@JumpingJacksMinutes" />
            </div>
            <div class="exercise-item">
                <label>Pull-up:</label>
                <input type="number" @bind="@PullUpMinutes" />
            </div>
            <div class="exercise-item">
                <label>Wallsits:</label>
                <input type="number" @bind="@WallsitsMinutes" />
            </div>
            <div class="exercise-item">
                <label>Rope jumping:</label>
                <input type="number" @bind="@RopeJumpingMinutes" />
            </div>
            <div class="onderdeel-item2">
                <label>Minutes</label>
                <label>Weights(kg)</label>
            </div>
            <div class="exercise-item">
                <label>Bench Press:</label>
                <input type="number" @bind="@BenchPressMinutes" />
                <input type="number" @bind="@BenchPressWeight" class="weight-input" />
            </div>
            <div class="exercise-item">
                <label>Dumbbell Rows:</label>
                <input type="number" @bind="@DumbbellRowsMinutes" />
                <input type="number" @bind="@DumbbellRowsWeight" class="weight-input" />
            </div>
            <div class="exercise-item">
                <label>Curls:</label>
                <input type="number" @bind="@CurlsMinutes" />
                <input type="number" @bind="@CurlsWeight" class="weight-input" />
            </div>
            <div class="exercise-item">
                <label>Leg Press:</label>
                <input type="number" @bind="@LegPressMinutes" />
                <input type="number" @bind="@LegPressWeight" class="weight-input" />
            </div>
            <div class="onderdeel-item3">
                <label>Minutes</label>
                <label>distance(km)</label>
            </div>
            <div class="exercise-item">
                <label>Walking:</label>
                <input type="number" @bind="@WalkingMinutes" />
                <input type="number" @bind="@WalkingSpeed" class="speed-input" />
            </div>
            <div class="exercise-item">
                <label>Cycling:</label>
                <input type="number" @bind="@CyclingMinutes" />
                <input type="number" @bind="@CyclingSpeed" class="speed-input" />
            </div>
            <div class="exercise-item">
                <label>Swimming:</label>
                <input type="number" @bind="@SwimmingMinutes" />
                <input type="number" @bind="@SwimmingSpeed" class="speed-input" />
            </div>
            <div class="exercise-item">
                <label>Running:</label>
                <input type="number" @bind="@RunningMinutes" />
                <input type="number" @bind="@RunningSpeed" class="speed-input" />
            </div>
            <div class="exercise-item">
                <label>Sprinting:</label>
                <input type="number" @bind="@SprintingMinutes" />
                <input type="number" @bind="@SprintingSpeed" class="speed-input" />
            </div>
            <div class="exercise-item">
                <label>Stairwalking:</label>
                <input type="number" @bind="@StairWalkingMinutes" />
                <input type="number" @bind="@StairWalkingSpeed" class="speed-input" />
            </div>
        </div>

        <div class="schema-wrapper">
            <div class="schemaselecter-container">
                <div class="schemaselectertitel">
                    <label>Choose exercise for planning:</label>
                </div>
                <div class="schemaselecter-item">
                    <label>Push-up</label>
                    <input type="checkbox" @bind="@PushUpSelected" />
                </div>
                <div class="schemaselecter-item">
                    <label>Plank</label>
                    <input type="checkbox" @bind="@PlankSelected" />
                </div>
                <div class="schemaselecter-item">
                    <label>Burpees</label>
                    <input type="checkbox" @bind="@BurpeesSelected" />
                </div>
                <div class="schemaselecter-item">
                    <label>Jumping Jacks</label>
                    <input type="checkbox" @bind="@JumpingJacksSelected" />
                </div>
                <div class="schemaselecter-item">
                    <label>Pull-up</label>
                    <input type="checkbox" @bind="@PullUpSelected" />
                </div>
                <div class="schemaselecter-item">
                    <label>Wallsits</label>
                    <input type="checkbox" @bind="@WallsitsSelected" />
                </div>
                <div class="schemaselecter-item">
                    <label>Rope jumping</label>
                    <input type="checkbox" @bind="@RopeJumpingSelected" />
                </div>
                <div class="schemaselecter-item">
                    <label>Bench press</label>
                    <input type="checkbox" @bind="@BenchPressSelected" />
                </div>
                <div class="schemaselecter-item">
                    <label>Dumbbell Rows</label>
                    <input type="checkbox" @bind="@DumbbellRowsSelected" />
                </div>
                <div class="schemaselecter-item">
                    <label>Curls</label>
                    <input type="checkbox" @bind="@CurlsSelected" />
                </div>
                <div class="schemaselecter-item">
                    <label>Leg Press</label>
                    <input type="checkbox" @bind="@LegPressSelected" />
                </div>
                <div class="schemaselecter-item">
                    <label>Walking</label>
                    <input type="checkbox" @bind="@WalkingSelected" />
                </div>
                <div class="schemaselecter-item">
                    <label>Cycling</label>
                    <input type="checkbox" @bind="@CyclingSelected" />
                </div>
                <div class="schemaselecter-item">
                    <label>Swimming</label>
                    <input type="checkbox" @bind="@SwimmingSelected" />
                </div>
                <div class="schemaselecter-item">
                    <label>Running</label>
                    <input type="checkbox" @bind="@RunningSelected" />
                </div>
                <div class="schemaselecter-item">
                    <label>Sprinting</label>
                    <input type="checkbox" @bind="@SprintingSelected" />
                </div>
                <div class="schemaselecter-item">
                    <label>Stairwalking</label>
                    <input type="checkbox" @bind="@StairWalkingSelected" />
                </div>
            </div>

            <!-- Schema container waar de geselecteerde oefeningen worden weergegeven -->
            <div class="schema-container">
                <div class="schematitel">
                    <label>Planning today:</label>
                </div>

                <!-- Button to update the schema -->
                <button @onclick="UpdateSchema">Update Exercise</button>

                @foreach (var exercise in selectedExercises)
                {
                    <div class="schema-item">
                        <label>@exercise</label>
                        @if (exercise == "Push-up")
                        {
                            <input type="number" @bind="@PushUpschema" placeholder="Min." />
                        }
                        @if (exercise == "Plank")
                        {
                            <input type="number" @bind="@Plankschema" placeholder="Min." />
                        }
                        @if (exercise == "Burpees")
                        {
                            <input type="number" @bind="@Burpeesschema" placeholder="Min." />
                        }
                        @if (exercise == "Jumping Jacks")
                        {
                            <input type="number" @bind="@JumpingJacksschema" placeholder="Min." />
                        }
                        @if (exercise == "Pull-up")
                        {
                            <input type="number" @bind="@PullUpschema" placeholder="Min." />
                        }
                        @if (exercise == "Wallsits")
                        {
                            <input type="number" @bind="@Wallsitsschema" placeholder="Min." />
                        }
                        @if (exercise == "Rope Jumping")
                        {
                            <input type="number" @bind="@RopeJumpingschema" placeholder="Min." />
                        }
                        @if (exercise == "Bench Press")
                        {
                            <input type="number" @bind="@BenchPressschema" placeholder="Min." />
                        }
                        @if (exercise == "Dumbbell Rows")
                        {
                            <input type="number" @bind="@DumbbellRowsschema" placeholder="Min." />
                        }
                        @if (exercise == "Curls")
                        {
                            <input type="number" @bind="@Curlsschema" placeholder="Min." />
                        }
                        @if (exercise == "Leg Press")
                        {
                            <input type="number" @bind="@LegPressschema" placeholder="Min." />
                        }
                        @if (exercise == "Walking")
                        {
                            <input type="number" @bind="@Walkingschema" placeholder="Min." />
                        }
                        @if (exercise == "Cycling")
                        {
                            <input type="number" @bind="@Cyclingschema" placeholder="Min." />
                        }
                        @if (exercise == "Swimming")
                        {
                            <input type="number" @bind="@Swimmingschema" placeholder="Min." />
                        }
                        @if (exercise == "Running")
                        {
                            <input type="number" @bind="@Runningschema" placeholder="Min." />
                        }
                        @if (exercise == "Sprinting")
                        {
                            <input type="number" @bind="@Sprintingschema" placeholder="Min." />
                        }
                        @if (exercise == "Stair Walking")
                        {
                            <input type="number" @bind="@StairWalkingschema" placeholder="Min." />
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</body>


@code {
    //checkboxen voor in schema
    private bool PushUpSelected = false;
    private bool PlankSelected = false;
    private bool BurpeesSelected = false;
    private bool JumpingJacksSelected = false;
    private bool PullUpSelected = false;
    private bool WallsitsSelected = false;
    private bool RopeJumpingSelected = false;
    private bool BenchPressSelected = false;
    private bool DumbbellRowsSelected = false;
    private bool CurlsSelected = false;
    private bool LegPressSelected = false;
    private bool WalkingSelected = false;
    private bool CyclingSelected = false;
    private bool SwimmingSelected = false;
    private bool RunningSelected = false;
    private bool SprintingSelected = false;
    private bool StairWalkingSelected = false;

    private int? PushUpschema = null;
    private int? Plankschema = null;
    private int? Burpeesschema = null;
    private int? JumpingJacksschema = null;
    private int? PullUpschema = null;
    private int? Wallsitsschema = null;
    private int? RopeJumpingschema = null;
    private int? BenchPressschema = null;
    private int? DumbbellRowsschema = null;
    private int? Curlsschema = null;
    private int? LegPressschema = null;
    private int? Walkingschema = null;
    private int? Cyclingschema = null;
    private int? Swimmingschema = null;
    private int? Runningschema = null;
    private int? Sprintingschema = null;
    private int? StairWalkingschema = null;

    // Lijst van oefeningen die geselecteerd zijn
    private List<string> selectedExercises = new List<string>();

    // Methode om de geselecteerde oefeningen bij te werken
    private void UpdateSchema()
    {
        selectedExercises.Clear();

        if (PushUpSelected) selectedExercises.Add("Push-up");
        if (PlankSelected) selectedExercises.Add("Plank");
        if (BurpeesSelected) selectedExercises.Add("Burpees");
        if (JumpingJacksSelected) selectedExercises.Add("Jumping Jacks");
        if (PullUpSelected) selectedExercises.Add("Pull-up");
        if (WallsitsSelected) selectedExercises.Add("Wallsits");
        if (RopeJumpingSelected) selectedExercises.Add("Rope Jumping");
        if (BenchPressSelected) selectedExercises.Add("Bench Press");
        if (DumbbellRowsSelected) selectedExercises.Add("Dumbbell Rows");
        if (CurlsSelected) selectedExercises.Add("Curls");
        if (LegPressSelected) selectedExercises.Add("Leg Press");
        if (WalkingSelected) selectedExercises.Add("Walking");
        if (CyclingSelected) selectedExercises.Add("Cycling");
        if (SwimmingSelected) selectedExercises.Add("Swimming");
        if (RunningSelected) selectedExercises.Add("Running");
        if (SprintingSelected) selectedExercises.Add("Sprinting");
        if (StairWalkingSelected) selectedExercises.Add("Stair Walking");

        StateHasChanged();
    }

    // Variabelen voor oefeningem

    //Male true als user man is en false als het een vrouw is
    private bool Male = false;

    //Een van de volgende variabelen moet op true op basis van userinfo
    private bool Terrible = false;
    private bool Bad = false;
    private bool Average = false;
    private bool Good = false;
    private bool Great = false;

    private double Gender = 1;
    private int Age = 10;
    private double Difficulty = 1;



    private int CurrentMinutes = 0;
    private int Next100mins = 0;
    private int lastBonus100 = 0; // Houdt het laatste honderdtal bij waarvoor bonus is gegeven

    private int PushUpMinutes = 0;
    private int PlankMinutes = 0;
    private int BurpeesMinutes = 0;
    private int JumpingJacksMinutes = 0;
    private int BenchPressMinutes = 0;
    private int BenchPressWeight = 0;
    private int DumbbellRowsMinutes = 0;
    private int DumbbellRowsWeight = 0;
    private int CurlsMinutes = 0;
    private int CurlsWeight = 0;
    private int PullUpMinutes = 0;
    private int LegPressMinutes = 0;
    private int LegPressWeight = 0;
    private int WalkingMinutes = 0;
    private int WalkingSpeed = 0;
    private int CyclingMinutes = 0;
    private int CyclingSpeed = 0;
    private int SwimmingMinutes = 0;
    private int SwimmingSpeed = 0;
    private int RunningMinutes = 0;
    private int RunningSpeed = 0;
    private int SprintingMinutes = 0;
    private int SprintingSpeed = 0;
    private int WallsitsMinutes = 0;
    private int RopeJumpingMinutes = 0;
    private int StairWalkingMinutes = 0;
    private int StairWalkingSpeed = 0;

    private int coinsamount = 1000; // De hoeveelheid coins
    private int level = 10; // Hoogte level gebruiker


    // Methode die wordt aangeroepen bij de knopdruk
    private void UpdateCoinsAmount()
    {
        // Bijwerken van coins hoeveelheid op basis van de minuten voor elke oefening
        if (Male)
            Gender = 1;
        else Gender = 1.2;


        if (Terrible)
            Difficulty = 2;
        if (Bad)
            Difficulty = 1.7;
        if (Average)
            Difficulty = 1.4;
        if (Good)
            Difficulty = 1;
        if (Great)
            Difficulty = 0.7;

        if (PushUpMinutes >= PushUpschema)
        {
            coinsamount += 50;
            JumpingJacksschema = null;
        }

        if (PlankMinutes >= Plankschema)
        {
            coinsamount += 50;
            Plankschema = null;
        }

        if (BurpeesMinutes >= Burpeesschema)
        {
            coinsamount += 50;
            Burpeesschema = null;
        }

        if (JumpingJacksMinutes >= JumpingJacksschema)
        {
            coinsamount += 50;
            JumpingJacksschema = null;
        }

        if (BenchPressMinutes >= BenchPressschema)
        {
            coinsamount += 50;
            BenchPressschema = null;
        }

        if (DumbbellRowsMinutes >= DumbbellRowsschema)
        {
            coinsamount += 50;
            DumbbellRowsschema = null;
        }

        if (CurlsMinutes >= Curlsschema)
        {
            coinsamount += 50;
            Curlsschema = null;
        }

        if (PullUpMinutes >= PullUpschema)
        {
            coinsamount += 50;
            PullUpschema = null;
        }

        if (LegPressMinutes >= LegPressschema)
        {
            coinsamount += 50;
            LegPressschema = null;
        }

        if (WalkingMinutes >= Walkingschema)
        {
            coinsamount += 50;
            Walkingschema = null;
        }

        if (CyclingMinutes >= Cyclingschema)
        {
            coinsamount += 50;
            Cyclingschema = null;
        }

        if (SwimmingMinutes >= Swimmingschema)
        {
            coinsamount += 50;
            Swimmingschema = null;
        }

        if (RunningMinutes >= Runningschema)
        {
            coinsamount += 50;
            Runningschema = null;
        }

        if (SprintingMinutes >= Sprintingschema)
        {
            coinsamount += 50;
            Sprintingschema = null;
        }

        if (WallsitsMinutes >= Wallsitsschema)
        {
            coinsamount += 50;
            Wallsitsschema = null;
        }

        if (RopeJumpingMinutes >= RopeJumpingschema)
        {
            coinsamount += 50;
            RopeJumpingschema = null;
        }

        if (StairWalkingMinutes >= StairWalkingschema)
        {
            coinsamount += 50;
            StairWalkingschema = null;
        }



        coinsamount = (int)(coinsamount + 0.1 * Age * Difficulty *
            (+PushUpMinutes * 150
            + PlankMinutes * 100
            + BurpeesMinutes * 200
            + JumpingJacksMinutes * 100
            + BenchPressMinutes * 50
            + DumbbellRowsMinutes * 30
            + CurlsMinutes * 30
            + PullUpMinutes * 50
            + LegPressMinutes * 30
            + WalkingMinutes * 20
            + CyclingMinutes * 20
            + SwimmingMinutes * 50
            + RunningMinutes * 60
            + SprintingMinutes * 100
            + WallsitsMinutes * 70
            + RopeJumpingMinutes * 120
            + StairWalkingMinutes * 140));

        // Gewicht en snelheid alleen toevoegen als minuten > 0
        if (BenchPressMinutes > 0)
            coinsamount += BenchPressWeight * 1;

        if (DumbbellRowsMinutes > 0)
            coinsamount += DumbbellRowsWeight * 2;

        if (CurlsMinutes > 0)
            coinsamount += CurlsWeight * 2;

        if (LegPressMinutes > 0)
            coinsamount += LegPressWeight * 1;

        if (WalkingMinutes > 0)
            coinsamount += WalkingSpeed * 1;

        if (CyclingMinutes > 0)
            coinsamount += CyclingSpeed * 1;

        if (SwimmingMinutes > 0)
            coinsamount += SwimmingSpeed * 2;

        if (RunningMinutes > 0)
            coinsamount += RunningSpeed * 1;

        if (SprintingMinutes > 0)
            coinsamount += SprintingSpeed * 1;

        if (StairWalkingMinutes > 0)
            coinsamount += StairWalkingSpeed * 1;

        CurrentMinutes = CurrentMinutes + PushUpMinutes + PlankMinutes + BurpeesMinutes + JumpingJacksMinutes + PullUpMinutes + WallsitsMinutes + RopeJumpingMinutes + BenchPressMinutes + DumbbellRowsMinutes + CurlsMinutes + LegPressMinutes + WalkingMinutes + CyclingMinutes + SwimmingMinutes + RunningMinutes + SprintingMinutes + StairWalkingMinutes;

        Next100mins = 100 - (CurrentMinutes % 100);

        int current100 = CurrentMinutes / 100;
        if (current100 > lastBonus100)
        {
            int bonus = (current100 - lastBonus100) * 1000;
            coinsamount += bonus;

            lastBonus100 = current100;
        }

        PushUpMinutes = 0;
        PlankMinutes = 0;
        BurpeesMinutes = 0;
        JumpingJacksMinutes = 0;
        BenchPressMinutes = 0;
        BenchPressWeight = 0;
        DumbbellRowsMinutes = 0;
        DumbbellRowsWeight = 0;
        CurlsMinutes = 0;
        CurlsWeight = 0;
        PullUpMinutes = 0;
        LegPressMinutes = 0;
        LegPressWeight = 0;
        WalkingMinutes = 0;
        WalkingSpeed = 0;
        CyclingMinutes = 0;
        CyclingSpeed = 0;
        SwimmingMinutes = 0;
        SwimmingSpeed = 0;
        RunningMinutes = 0;
        RunningSpeed = 0;
        SprintingMinutes = 0;
        SprintingSpeed = 0;
        WallsitsMinutes = 0;
        RopeJumpingMinutes = 0;
        StairWalkingMinutes = 0;
        StairWalkingSpeed = 0;

        // Herlaad de UI na de wijziging
        StateHasChanged();
    }

}


<style>
    body {
        margin: 0;
        background: linear-gradient(to bottom, purple, blue);
        color: #333;
        text-align: center;
/*         padding: 20px;
 */        position: relative;
    }

    h1 {
        font-size: 4rem;
        margin-top: 5px;
        color: #fff;
        text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);
    }

    h2 {
        font-size: 1.5rem;
        position: absolute;
        left: 247px;
        top: 50px;
        color: #fff;
        text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);
    }


    p {
        font-size: 1.4rem;
        margin-bottom: 3px;
        color: #fdfdfd;
        text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);
    }

    .wrapper {
        display: flex;
        justify-content: flex-start;
        align-items: flex-start;
        width: 100%;
    }

    .left-frame {
        width: 300px;
        height: 450px;
        background-color: rgba(0,0,0,0.3);
        margin-right: 2px;
        border-radius: 8px;
        padding: 20px;
        color: #fff;
    }

        .left-frame label {
            font-size: 1.5rem;
            font-weight: bold;
            margin-bottom: 20px;
            display: block;
        }

        .left-frame button {
            margin-bottom: 15px;
            padding: 10px 20px;
            background-color: #ffcc00;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 1.1rem;
            color: white;
        }

            .left-frame button:hover {
                background-color: #ff9900;
            }

    .exercise-container {
        width: 700px;
        height: 450px;
        margin-right: 10px;
        overflow-y: scroll;
        border: 2px solid #fff;
        border-radius: 8px;
        background: rgba(100, 255, 255, 0);
        padding: 10px;
    }

        .exercise-container::-webkit-scrollbar {
            width: 10px;
        }

        .exercise-container::-webkit-scrollbar-thumb {
            background: #fff;
            border-radius: 5px;
        }

    .exercise-item {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
    }

        .exercise-item label {
            flex: none;
            color: #fff;
            font-size: 1rem;
            text-align: left;
            width: 160px;
            font-weight: bold;
        }

    .onderdeel-item {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
        margin-left: 370px;
    }

        .onderdeel-item label {
            flex: none;
            color: #fff;
            font-size: 1rem;
            text-align: right;
            width: 70px;
            font-weight: bold;
        }

    .onderdeel-item2 {
        display: flex;
        gap: 180px;
        margin-bottom: 10px;
        margin-left: 270px;
    }

        .onderdeel-item2 label {
            flex: none;
            color: #fff;
            font-size: 1rem;
            text-align: right;
            width: 70px;
            font-weight: bold;
        }

    .onderdeel-item3 {
        display: flex;
        gap: 180px;
        margin-bottom: 10px;
        margin-left: 270px;
    }

        .onderdeel-item3 label {
            flex: none;
            color: #fff;
            font-size: 1rem;
            text-align: right;
            width: 70px;
            font-weight: bold;
        }


    .exercise-item input {
        flex-grow: 1;
        margin-left: 10px;
        padding: 5px;
        border: 1px solid #ddd;
        border-radius: 40px;
        text-align: center;
        display: block;
    }

    .exercise-item .weight-input,
    .exercise-item .speed-input {
        width: 100px;
    }

    /* Coin styling (right top corner) */
    .coin {
        position: absolute;
        top: 10px;
        right: 200px;
        width: 40px;
        height: 40px;
        background-color: gold;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        color: #fff;
        font-size: 18px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    }

    /* Coin label styling */
    .coin-label {
        position: absolute;
        top: 15px;
        right: 120px;
        font-size: 22px;
        font-weight: bold;
        text-align: left;
        color: #fff;
        text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);
    }

    /* Level Coin styling */
    .level-coin {
        position: absolute;
        top: 60px;
        right: 200px;
        width: 40px;
        height: 40px;
        background-color: green;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        color: #fff;
        font-size: 18px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    }

    /* Level label styling */
    .level-label {
        position: absolute;
        top: 65px;
        right: 120px;
        font-size: 22px;
        font-weight: bold;
        text-align: left;
        color: #fff;
        text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);
    }

    .schema-wrapper {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .schemaselecter-container {
        width: 220px;
        height: 220px;
        margin-bottom: 10px;
        margin-right: 10px;
        overflow-y: scroll;
        border: 2px solid #fff;
        border-radius: 8px;
        background: rgba(100, 255, 255, 0);
        padding: 10px;
    }

        .schemaselecter-container::-webkit-scrollbar {
            width: 10px;
        }

        .schemaselecter-container::-webkit-scrollbar-thumb {
            background: #fff;
            border-radius: 5px;
        }

    .schemaselecter-item {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
    }

        .schemaselecter-item label {
            flex: none;
            color: #fff;
            font-size: 1rem;
            text-align: left;
            width: 160px;
            font-weight: bold;
        }

    .schemaselectertitel label {
        flex: none;
        color: #fff;
        font-size: 1rem;
        text-align: center;
        width: 160px;
        font-weight: bold;
        margin-bottom: 10px;
    }

    .schema-container {
        width: 220px;
        height: 220px;
        margin-bottom: 10px;
        margin-right: 10px;
        overflow-y: scroll;
        border: 2px solid #fff;
        border-radius: 8px;
        background: rgba(100, 255, 255, 0);
        padding: 10px;
    }

        .schema-container::-webkit-scrollbar {
            width: 10px;
        }

        .schema-container::-webkit-scrollbar-thumb {
            background: #fff;
            border-radius: 5px;
        }

        .schema-container button {
            margin-bottom: 10px;
            background-color: #ffcc00;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 1.1rem;
            color: white;
            width: 170px;
            height: 28px;
        }

    .schema-item {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
    }

        .schema-item label {
            flex: none;
            color: #fff;
            font-size: 1rem;
            text-align: left;
            width: 150px;
            font-weight: bold;
        }

        .schema-item input {
            border: 1px solid #ddd;
            border-radius: 4px;
            text-align: center;
            width: 43px;
            height: 25px;
        }

    .schematitel label {
        flex: none;
        color: #fff;
        font-size: 1rem;
        text-align: center;
        width: 160px;
        font-weight: bold;
        margin-bottom: 5px;
    }

</style>
