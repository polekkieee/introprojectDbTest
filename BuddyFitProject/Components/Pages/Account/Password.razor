@page "/password"
@using BuddyFitProject.Components.Services
@using BuddyFitProject.Data.Models
@inject UserService UserService
@inject EmailService EmailService
@inject NavigationManager NavigationManager


<head>
    <PageTitle> Reset Password </PageTitle>
    <link href="Password.razor.css" rel="stylesheet" />

</head>
<body>
    <header>
        <h1>Forgot your password?</h1>
        <hr />
        <h2>An e-mail will be sent to reset your password</h2>
    </header>
    <main>
        <EditForm FormName="SendEmail" Model="@User" OnValidSubmit="SendEmail">
          <div class="input">
                <label class="l2">Username:</label>
                <InputText type="text" class="l2" @bind-Value="User.Username" />
          </div>
          <hr />
            <div class="input">
                <label class="l2">Email:</label>
                <InputText type="email" class="l2" @bind-Value="User.Email" />
            </div>
            <hr />
            <div class="button-group">
                <button type="submit" class="btn btn-primary">Send</button>
                <a href="resetPassword /{username}/{email}" class="btn btn-secondary">Received your reset code?</a>
            </div>
        </EditForm>


        @if (!string.IsNullOrEmpty(ReturnMessage))
        {
            <p class="alert alert-info">@ReturnMessage</p>
        }

    </main>
</body>





@code {
    [SupplyParameterFromForm]
    private Users User { get; set; } = new();
    private string ReturnMessage { get; set; } = string.Empty;

    private async Task SendEmail()
    {
        if (UserService.ValidateUser(User.Username, User.Password))
        {
            await EmailService.SendEmailAsync(User.Email, "resetcode", "12345678");
            NavigationManager.NavigateTo($"/resetPassword/{User.Username}/{User.Email}");
        }

       else
       {
            ReturnMessage = $"Hello, {User.Username}! You don't exist: your email is wrong or your username. Or both!";
       }
    }
}