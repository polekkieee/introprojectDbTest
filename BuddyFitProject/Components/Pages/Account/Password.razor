@page "/password"
@using BuddyFitProject.Components.Services
@using BuddyFitProject.Data.Models
@inject UserService UserService
@inject EmailService EmailService
@inject NavigationManager NavigationManager
@inject ValidateUserService ResetPasswordService

<h3>Fill in you username and email; an email will be send so you can reset your password:</h3>

<EditForm FormName="SendEmail" Model="@User" OnValidSubmit="SendEmail">
	<label class="l2">Username:</label>
	<InputText type="text" class="l2" @bind-Value="User.Username" />
	<hr />
	<label class="l2">Email:</label>
	<InputText type="email" class="l2" @bind-Value="User.Email" />
	<hr />
	<button class="b2" type="submit">Send</button>
</EditForm>

@if (!string.IsNullOrEmpty(ReturnMessage))
{
	<p class="alert alert-info">@ReturnMessage</p>
}

@code
{
	[SupplyParameterFromForm]
	private Users User { get; set; } = new();
	private string ReturnMessage { get; set; } = string.Empty;

	private async Task SendEmail()
	{
		string resetcode = ResetPasswordService.SetResetCode(User.Username, User.Email);

		if (UserService.ValidateUserByEmailAndUsername(User.Username, User.Email))
		{
			await EmailService.SendEmailResetPassword(User.Email, "Password Reset Code", $"Your reset code is:", resetcode);
			NavigationManager.NavigateTo($"/resetPassword/{User.Username}/{User.Email}");
		}
		else
		{
			ReturnMessage = $"Hello, {User.Username}! Your email is wrong or/and your username.";
		}
	}
}