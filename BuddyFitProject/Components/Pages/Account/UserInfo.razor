@page "/userinfo"
@using Microsoft.EntityFrameworkCore
@using BuddyFitProject.Data.Models
@using BuddyFitProject.Data;
@using BuddyFitProject.Components.Services
@using static BuddyFitProject.Data.Models.UserAndPet.TypesOfPets;
@inject UserService UserService
@inject NavigationManager navigationManager
@using System.Security.Claims
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authentication.Cookies
@inject UserService UserService
@inject NavigationManager navigationManager
@attribute [ExcludeFromInteractiveRouting]

<head>
	<PageTitle>User Info</PageTitle>
	<link href="UserInfo.razor.css" rel="stylesheet" />
</head>
<body>
	<header>
		<h1>Set up your account</h1>
	</header>
	
	<br />

	<main>
	<!--Form where the user needs to fill in their age, gender, start condition, name for their pet and can also choose their pet:-->
	<EditForm FormName="infoUser" Model="@UserAndPet" OnValidSubmit="AddInfo"> 
		<h2>About you:</h2><div class="input">
			<label for="Age" class="l2">Age:</label>
			<InputNumber required @bind-Value="UserAndPet.User.Age" />
		</div>
		<br />
		<div class="input">
			<label for="Gender" class="l2">Gender:</label>
			<InputText required @bind-Value="UserAndPet.User.Gender" />
		</div>
		<br />
		<div class="input">
			<label for="StartCondition" class="l2">Start Condition:</label>
			<InputText required @bind-Value="UserAndPet.User.Start_condition" />
		</div>

		<br />
		<br />

		<h2>Choose your Fit Buddy:</h2>
		<div class="input">
			<label for="PetName" class="l2">My pet's name is </label>
			<InputText required @bind-Value="UserAndPet.Pet.Name" />
		</div>
		<br />
		<div class="radio-group">
			<InputRadioGroup @bind-Value="UserAndPet.Pet.Type">
				<label class="radio">
					<InputRadio Value="Bear" />
					<img src="Pets/bear.png" aria-hidden="true" width="200">
				</label>

				<label class="radio">
					<InputRadio Value="Cat" />
					<img src="Pets/cat.png" aria-hidden="true" width="200">
				</label>

				<label class="radio">
					<InputRadio Value="Bunny" />
					<img src="Pets/bunny.png" aria-hidden="true" width="200">
				</label>
			</InputRadioGroup>

		</div>
	<button type="submit" class="b2">Let's start!</button>
	</EditForm>
	</main>
</body>


@code {
	[SupplyParameterFromForm]
	private UserAndPet UserAndPet { get; set; } = new();


	Users? UserDb;

	private string errorMessage;

	private void AddInfo()
	{
		if (UserDb != null)
		{
			UserDb.Gender = UserAndPet.User.Gender;
			UserDb.Age = UserAndPet.User.Age;
			UserDb.Start_condition = UserAndPet.User.Start_condition;

			UserService.UpdateUser(UserDb); //Save the new details into the database

			var pet = new Pets
				{
					UserId = UserDb.Id,
					Name = UserAndPet.Pet.Name,
					Type = UserAndPet.Pet.Type,
					Level = 1,
					Food_bar = 0,
					Health_bar = 0,
					Stamina_bar = 0,
					Clothing = "nothing",
					Health_bar_tlc = UserDb.Register_moment,
					Food_bar_tlc = UserDb.Register_moment
				};

			UserService.AddPet(pet); //Save the pet into the database

			navigationManager.NavigateTo("/pet"); //Navigate to the pet page
		}
		else
		{
			errorMessage = "Unable to update user information.";
		}
	}

	protected override void OnInitialized()
	{
		var httpContext = HttpContextAccessor.HttpContext;

		if (httpContext?.User.Identity?.IsAuthenticated == true)
		{
			var userIdClaim = httpContext.User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.NameIdentifier);
			if (userIdClaim != null && int.TryParse(userIdClaim.Value, out int loggedInUserId))
			{
				UserDb = UserService.GetUserById(loggedInUserId);
			}
			else
			{
				navigationManager.NavigateTo("/login");
			}
		}
	}
}

