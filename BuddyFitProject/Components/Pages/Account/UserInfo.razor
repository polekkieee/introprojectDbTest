@page "/userinfo/{email}/{username}"
@using Microsoft.EntityFrameworkCore
@using BuddyFitProject.Data.Models
@using BuddyFitProject.Data;
@using BuddyFitProject.Components.Services
@inject UserService UserService
@inject NavigationManager navigationManager
@using System.Security.Claims
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authentication.Cookies
@inject UserService UserService
@inject NavigationManager navigationManager
@attribute [ExcludeFromInteractiveRouting]

<PageTitle>User Info</PageTitle>


<h1 class="h">Set up your account</h1>
<hr />


<EditForm FormName="infoUser" Model="@User" OnValidSubmit="AddInfo">
	<div>
	</div>
	<label for="Age" class="l2">Age:</label>
	<InputNumber required @bind-Value="User.Age" />
	<br>
	<br>
	<label for="Gender" class="l2">Gender:</label>
	<InputText required @bind-Value="User.Gender" />
	<br />
	<br>
	<label for="StartCondition" class="l2">Start Condition:</label>
	<InputText required @bind-Value="User.Start_condition" />
	<br />
	<hr />
	<label>Choose your pet:</label>
	<!-- hier buutons van de pet image-->
	<br>
	<!--<label for="PetName" class="l2">My pet's name is </label>
	<InputText required @bind-Value="Pet.Name" />
	<br />

	<span> @errorMessage </span>-->
	<button type="submit" class="b2">Let's start!</button>
</EditForm>


<!--<EditForm FormName="infoPet" Model="@Pet" OnValidSubmit="AddPet">
	<div>
		<h3>Choose your pet</h3>
		<hr />
		<label for="petName" class="l2">My pet is called:</label>
		<InputText required @bind-Value="Pet.Name" />
		<br />
		<button type="button"> <img src="bunny.png" aria-hidden="true" width="400"></button>
		<button> <img src="bear.png" aria-hidden="false" width="400"> </button>
		<button> <img src="cat.png" aria-hidden="true" width="400" </button>
	</div>
</EditForm> -->
@code {
	[SupplyParameterFromForm]
	private Users User { get; set; } = new();

	[SupplyParameterFromForm]
	private Pets Pet { get; set; } = new();

	[Parameter]
	public string Email { get; set; } // Define the Email route parameter.

	[Parameter]
	public string Username { get; set; } // Define the Passowrd route parameter.

	private string errorMessage;

	private void AddInfo()
	{
		Users UserDb = UserService.GetUserByUsernameAndEmail(Username, Email);
		UserDb.Gender = User.Gender;
		UserDb.Age = User.Age;
		UserDb.Start_condition = User.Start_condition;
		UserService.UpdateUser(UserDb); // Save additional details
		navigationManager.NavigateTo("/login"); // Redirect to the dashboard or welcome page
	}

	private void AddPet()
	{
	}
}


<style>
	body {
		margin: 0;
		font-family: Arial, sans-serif;
		background: linear-gradient(to bottom, purple, blue);
		color: #333;
		padding: 20px;
		position: relative;
	}
</style>