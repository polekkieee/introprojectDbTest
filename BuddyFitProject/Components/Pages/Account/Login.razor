@page "/login"
@using BuddyFitProject.Data
@using BuddyFitProject.Data.Models
@using System.Security.Claims
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authentication.Cookies
@inject BuddyFitDbContext appDbContext
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [ExcludeFromInteractiveRouting]


<PageTitle>Login</PageTitle>

<h1 class="l2">Login</h1>
<EditForm FormName="LoginUser" Model="@Model1" OnValidSubmit="LoginUser">
	<label for="UserName" class="l2">Username:</label>
	<InputText @bind-Value="Model1.Username" />
	<br>
	<br>
	<label for="Password" class="l2">Password:</label>
	<InputText @bind-Value="Model1.Password" />
	<br />
	<span> @errorMessage </span>
	<button type="submit" class="b2">Login</button>
	<a href="register"></a>
	<button class="b2">Register</button>
	<a href="password"></a>
	<button class="b3">Password forgotten?</button>
</EditForm>

@code {
	[SupplyParameterFromForm]
	private Users Model1 { get; set; } = new();

	[CascadingParameter]
	public HttpContext httpcontext { get; set; } = default!;

	private string errorMessage;



	private async Task LoginUser()
	{
		var userAccount = appDbContext.Users
			.Where(x => x.Username == Model1.Username)
			.FirstOrDefault();

		if (userAccount is null || userAccount.Password != Model1.Password)
		{
			errorMessage = "Your username or password is invalid.";
			return;
		}

		var claims = new List<Claim>
		{
			new Claim(ClaimTypes.Name, Model1.Username),
		};

		var identity = new ClaimsIdentity(claims, CookieAuthenticationDefaults.AuthenticationScheme);
		var principal = new ClaimsPrincipal(identity);
		await httpcontext.SignInAsync(principal);
		navigationManager.NavigateTo("/session");
	}
}
