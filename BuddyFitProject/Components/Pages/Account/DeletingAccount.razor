@page "/deletingaccount"
@using BuddyFitProject.Data.Models
@using BuddyFitProject.Components.Services;
@inject UserService UserService
@inject NavigationManager navigationManager

<h3>DeletingAccount</h3>

<h1 class="l2">Delete your account:</h1>
<EditForm FormName="DeleteYourUser" Model="@User" OnValidSubmit="DeleteUser">
	<label for="Username">Username:</label>
	<InputText required @bind-Value="User.Username" />
	<br>
	<br>
	<label for="Password">Password:</label>
	<InputText required style="-webkit-text-security: disc; text-security: disc;" @bind-Value="User.Password" />
	<br />
	<br>
	<label for="Email">E-mail:</label>
	<InputText required @bind-Value="User.Email" />
	<br />
	<span> @errorMessage </span>
	<button type="submit">Delete</button>
</EditForm>

@code {
	[SupplyParameterFromForm]
	private Users User { get; set; } = new();

	private string errorMessage = string.Empty;

	private async Task DeleteUser()
	{
		bool isUserValid = UserService.ValidateUserByEmaiUsernameAndPassword(User.Username, User.Email, User.Password);

		if (!isUserValid)
		{
			errorMessage = "Your username, email or password is invalid.";
			return;
		}
		else
		{
			UserService.DeleteUser(User);
		}

		navigationManager.NavigateTo("/login");

	}

}
